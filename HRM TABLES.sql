REM======================SHIFT==================================
CREATE TABLE SHIFT_INFO
(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  SHIFT_CODE       VARCHAR2(12 BYTE) NOT NULL,
  SHIFT_NAME       VARCHAR2(100 BYTE),
  IN_TIME          NUMBER(8,2),
  OUT_TIME         NUMBER(8,2),
  GRACE_PERIOD     NUMBER(8,2),
  MEAL_TIME        NUMBER(8,2),
  IN_LIMIT_BEFORE  NUMBER(3),
  IN_LIMIT_AFTER   NUMBER(2),
  OT_LIMIT         NUMBER(2),
  SHIFT_IN_TIME    DATE,
  STATUS VARCHAR2(1) DEFAULT 'Y',
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15),
  CONSTRAINT SHIFT_INFO_PK PRIMARY KEY(ID)  
);
/
CREATE OR REPLACE TRIGGER SHIFT_INFO_TGR
BEFORE INSERT OR UPDATE ON SHIFT_INFO
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM=========================HTA_SHIFT_CHANGE============================
CREATE TABLE SHIFT_CHANGE
(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  SHIFT_CODE_FROM    VARCHAR2(20 BYTE),
  SHIFT_CODE_TO      VARCHAR2(20 BYTE),
  SHIFT_CHANGE_DATE  DATE,
  SHIFT_CHANGE_TIME  INTEGER,
  APPROVE_BY         NUMBER,
  APPROVE_DATE       DATE,  
  STATUS_FLAG        VARCHAR2(1 BYTE)           DEFAULT 'I',
  STATUS VARCHAR2(1) DEFAULT 'Y',
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15),
  CONSTRAINT SHIFT_CHANGE_PK PRIMARY KEY(ID)  
);
/
CREATE OR REPLACE TRIGGER SHIFT_CHANGE_TGR
BEFORE INSERT OR UPDATE ON SHIFT_CHANGE
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/

REM=====================EMP_PERSONAL========================

CREATE TABLE EMP_INFO
(
  ID                   NUMBER, 
  PIN                  VARCHAR2(100 BYTE),
  CARD_NO              VARCHAR2(30 BYTE),  
  NATIONAL_ID          VARCHAR2(100 BYTE),
  FIRST_NAME           VARCHAR2(250 BYTE),
  MIDDLE_NAME          VARCHAR2(120 BYTE),
  LAST_NAME            VARCHAR2(120 BYTE),
  NATIVE_NAME          VARCHAR2(200 BYTE),
  DOB                  DATE,
  POB                  VARCHAR2(100 BYTE),
  SEX                  VARCHAR2(10 BYTE),
  MARITAL_STATUS       VARCHAR2(10 BYTE),
  ID_MARK              VARCHAR2(50 BYTE),
  BLOOD_GROUP          VARCHAR2(15 BYTE),
  PASSPORT_NO          VARCHAR2(30 BYTE),
  PASS_PLACE_OF_ISSUE  VARCHAR2(50 BYTE),
  PASS_VALID_TILL      DATE,
  RELIGION_ID          NUMBER,
  NATIONALITY_NAME     VARCHAR2(100 BYTE),
  REF_EMP              VARCHAR2(60 BYTE),
  STATUS               VARCHAR2(15 BYTE),
  FATHER_NAME          VARCHAR2(100 BYTE),
  MOTHER_NAME          VARCHAR2(100 BYTE),
  HUSBAND_NAME         VARCHAR2(100 BYTE),  
  BEHAVIOR             VARCHAR2(200 BYTE),
  EMP_PHOTO            BLOB,
  MIME_TYPE            VARCHAR2(225),
  FILE_NAME            VARCHAR2(225),
  CHAR_SET			   VARCHAR2(225),
  PHOTO_LAST_UPDATE    DATE,
  EMAIL                VARCHAR2(100 BYTE),
  TEMP                 NUMBER,
  EMP_SIGN             BLOB,
  SIGN_MIME_TYPE       VARCHAR2(225),
  SIGN_FILE_NAME       VARCHAR2(225),
  SIGN_CHAR_SET		   VARCHAR2(225),
  SIGN_LAST_UPDATE     DATE,  
  HEIGHT               VARCHAR2(10 BYTE),
  DEPT_ID                      NUMBER,
  SECTION_ID                   NUMBER,
  DESIG_ID                     NUMBER,
  OFFICE_LOCATION              VARCHAR2(200 BYTE),
  EMP_TYPE                     VARCHAR2(20 BYTE),
  GRADE_ID                     NUMBER,
  JOINING_DATE                 DATE,
  CONFIRM_DATE                 DATE,
  INACTIVE_DATE                DATE,
  M_FLAG                       CHAR(1 BYTE),
  PROVISION_PERIOD             VARCHAR2(10 BYTE),
  BASIC_SAL                    NUMBER(10,2),
  HOUSE_RENT                   NUMBER(10,2),
  MEDICAL                      NUMBER(10,2),
  SPECIAL_ALLOW                NUMBER(10,2),
  CONV_ALLOW                   NUMBER(10,2),
  FOOD_ALLOW                   NUMBER(10,2),
  MOB_BILL                     NUMBER(10,2),
  HOLIDAY_ALLOW                NUMBER(10,2),
  OTHERS_ALLOW                 NUMBER(10,2),
  NIGHT_RATE                   NUMBER(10,2),
  WORK_ENT                     VARCHAR2(10 BYTE),
  OT_ENT                       CHAR(1 BYTE) DEFAULT 'N',
  TRAN_FUEL                    NUMBER(10,2),
  TRANSPORT_ENT                VARCHAR2(4 BYTE),
  WELFARE_CONTRIBUTION         NUMBER(10,2),
  DORMATORY_CHG                NUMBER(10,2),
  HOUSE_RENT_DEDUCT            NUMBER(10,2),
  TAX_ENT                      VARCHAR2(4 BYTE),
  TAX_DEDUCT                   NUMBER(10,2),
  PF                           CHAR(1 BYTE),
  PROVID_FUND                  CHAR(1 BYTE),
  RES_ENT                      VARCHAR2(4 BYTE),
  WEEKLY_OFF_NUM               NUMBER(1),
  WEEKLY_OFF_1                 VARCHAR2(15 BYTE),
  WEEKLY_OFF_2                 VARCHAR2(15 BYTE),
  WEEKLY_OFF_3                 VARCHAR2(100 BYTE),
  SAL_HOLDER                   CHAR(1 BYTE)     DEFAULT 'Y',
  BANK_ACC_NO                  VARCHAR2(20 BYTE),
  TIN_NO                       VARCHAR2(30 BYTE),
  CAL_CODE                     VARCHAR2(20 BYTE),
  SHIFT_ID                     NUMBER,  
  SHIFT_ROSTERING              CHAR(1 BYTE)     DEFAULT 'N',
  LAST_SHIFT_CHANGE_ID         NUMBER,
  LAST_SHIFT_ROSTER_DATE       DATE,
  LAST_SHIFT_ROSTER_DIRECTION  CHAR(1 BYTE),
  FLOOR_ID                     VARCHAR2(10 BYTE),
  RESIGN_DATE          DATE,
  CAUSES_OF_RESIGN     VARCHAR2(150 BYTE),  
  WORKING_FLAG         VARCHAR2(30 BYTE)        DEFAULT 'F',
  COMPLIANCE_EMP_TYPE  VARCHAR2(10 BYTE)        DEFAULT 'FS',
  RELEASE_DATE                 DATE,
  REASON                       VARCHAR2(200 BYTE),  
  ROSTER_ALLOW                 NUMBER(6),
  OFFICER_FLAG                 NUMBER,
  EFFECTIVE_DATE               DATE,
  INCENTIVE                    NUMBER(8),  
  SAL_CAL_METHOD               VARCHAR2(2 BYTE) DEFAULT 'R',
  MOBILE_BANKING_NO            VARCHAR2(14 BYTE),
  EMP_LEVEL                    VARCHAR2(2 BYTE),  
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15),
  CONSTRAINT EMP_PERSONAL_PK PRIMARY KEY(ID)  
);
/
CREATE OR REPLACE TRIGGER EMP_INFO_TGR
BEFORE INSERT OR UPDATE ON EMP_INFO
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/

REM=====================EMP_ADDRESS========================
DROP TABLE EMP_ADDRESS;

CREATE TABLE EMP_ADDRESS
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID		   NUMBER,
  PER_CARE_OFF       VARCHAR2(40 BYTE),
  PER_HOUSE_NO       VARCHAR2(40 BYTE),
  PER_ROAD_NO        VARCHAR2(40 BYTE),
  PER_BLOCK_NO       VARCHAR2(40 BYTE),
  PER_CITY_VILL      VARCHAR2(40 BYTE),
  PER_THANA_ID       NUMBER,
  PER_DISTRICT_ID    NUMBER,
  PER_DIVISION_ID    NUMBER,
  PER_POST_CODE      VARCHAR2(40 BYTE),
  PER_POST_NAME      VARCHAR2(150 BYTE),
  PER_PHONE          VARCHAR2(30 BYTE),
  PER_MOBILE         VARCHAR2(40 BYTE),
  PER_FAX            VARCHAR2(30 BYTE),
  PRE_CARE_OFF       VARCHAR2(40 BYTE),
  PRE_HOUSE_NO       VARCHAR2(40 BYTE),
  PRE_ROAD_NO        VARCHAR2(40 BYTE),
  PRE_BLOCK_NO       VARCHAR2(40 BYTE),
  PRE_CITY_VILL      VARCHAR2(40 BYTE),
  PRE_THANA_ID       NUMBER,
  PRE_DISTRICT_ID    NUMBER,
  PRE_DIVISION_ID    NUMBER,
  PRE_POST_CODE      VARCHAR2(40 BYTE),
  PRE_PHONE          VARCHAR2(30 BYTE),
  PRE_MOBILE         VARCHAR2(40 BYTE),
  PRE_FAX            VARCHAR2(30 BYTE),
  PRE_POST_NAME      VARCHAR2(150 BYTE),
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15),   
  CONSTRAINT EMP_ADDRESS_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_ADDRESS_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_ADDRESS_TGR
BEFORE INSERT OR UPDATE ON EMP_ADDRESS
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM=====================HTA_EMP_WORK_EXP========================
DROP TABLE EMP_WORK_EXP;

CREATE TABLE EMP_WORK_EXP
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  ORG_NAME         VARCHAR2(50 BYTE),
  DESIGNATION      VARCHAR2(30 BYTE),
  D_FROM           DATE,
  D_TO             DATE,
  LEAVE_REASON     VARCHAR2(50 BYTE),
  ORG_ADDRESS      VARCHAR2(20 BYTE),
  ORG_TEL          VARCHAR2(10 BYTE),
  LAST_SAL_DRAWN   NUMBER,
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_WORK_EXP_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_WORK_EXP_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)  
)
/
CREATE OR REPLACE TRIGGER EMP_WORK_EXP_TGR
BEFORE INSERT OR UPDATE ON EMP_WORK_EXP
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================HTA_EMP_EDUCATION====================
DROP TABLE EMP_EDUCATION;

CREATE TABLE EMP_EDUCATION
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  NAME_OF_INST     VARCHAR2(100 BYTE),
  PASSED_EXAM      VARCHAR2(50 BYTE),
  SUBJECT          VARCHAR2(50 BYTE),
  DIVISION_GRADE   VARCHAR2(30 BYTE),
  YEAR             VARCHAR2(5 BYTE),
  BOARD            VARCHAR2(100 BYTE),
  MARKS            NUMBER(4),
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_EDUCATION_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_EDUCATION_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_EDUCATION_TGR
BEFORE INSERT OR UPDATE ON EMP_EDUCATION
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM=====================HTA_EMP_SHORT_COURSE=======================
DROP TABLE EMP_SHORT_COURSE;

CREATE TABLE EMP_SHORT_COURSE
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  COURSE_NAME      VARCHAR2(100 BYTE),
  INSTITUTE        VARCHAR2(100 BYTE),
  C_FROM           DATE,
  C_TO             DATE,
  CERT_NAME        VARCHAR2(100 BYTE),
  REMARKS          VARCHAR2(100 BYTE),
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_SHORT_COURSE_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_SHORT_COURSE_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_SHORT_COURSE_TGR
BEFORE INSERT OR UPDATE ON EMP_SHORT_COURSE
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================HTA_EMP_TRAINING===========================
DROP TABLE EMP_TRAINING;

CREATE TABLE EMP_TRAINING
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  T_TITLE          VARCHAR2(100 BYTE),
  T_INSTITUTE      VARCHAR2(100 BYTE),
  T_FROM           DATE,
  T_TO             DATE,
  T_CERTIFICATE    VARCHAR2(100 BYTE),
  REMARKS          VARCHAR2(30 BYTE),
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_TRAINING_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_TRAINING_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_TRAINING_TGR
BEFORE INSERT OR UPDATE ON EMP_TRAINING
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================HTA_EMP_FAMILY========================

DROP TABLE EMP_FAMILY;

CREATE TABLE EMP_FAMILY
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  DEPENDANCY_NO    NUMBER(2),
  DEPENDANCY_NAME  VARCHAR2(100 BYTE),
  RELATIONSHIP     VARCHAR2(40 BYTE),
  D_DOB            DATE,
  D_AGE            NUMBER(4),
  D_SEX            VARCHAR2(7 BYTE),
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_FAMILY_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_FAMILY_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_FAMILY_TGR
BEFORE INSERT OR UPDATE ON EMP_FAMILY
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================EMP_LANGUAGE========================
DROP TABLE EMP_LANGUAGE;

CREATE TABLE EMP_LANGUAGE
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  LANGUAGE_ID      NUMBER,
  L_SPEAK          VARCHAR2(40 BYTE),
  L_READ           VARCHAR2(40 BYTE),
  L_WRITE          VARCHAR2(40 BYTE),
  L_UNDERSTAND     VARCHAR2(40 BYTE),  
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_LANGUAGE_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_LANGUAGE_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_LANGUAGE_TGR
BEFORE INSERT OR UPDATE ON EMP_LANGUAGE
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================EMP_IT_LITERACY========================
DROP TABLE EMP_IT_LITERACY;

CREATE TABLE EMP_IT_LITERACY
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER, 
  PROG_ID          NUMBER,
  EXCELENT         VARCHAR2(5 BYTE),
  GOOD             VARCHAR2(5 BYTE),
  FAIR             VARCHAR2(5 BYTE),
  KNOW_LITTLE      VARCHAR2(5 BYTE),
  DO_NOT_KNOW_AT_ALL  VARCHAR2(5 BYTE),   
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_IT_LITERACY_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_IT_LITERACY_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_IT_LITERACY_TGR
BEFORE INSERT OR UPDATE ON EMP_IT_LITERACY
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/
REM========================EMP_REFERENCE========================
DROP TABLE EMP_REFERENCE;

CREATE TABLE EMP_REFERENCE
(
  ID               NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1),
  EMP_ID           NUMBER,
  SL_NO			   NUMBER(2),
  NAME             VARCHAR2(100 BYTE),
  RELATION         VARCHAR2(100 BYTE),
  ORG_NAME         VARCHAR2(100 BYTE),
  DESIGNATION      VARCHAR2(100 BYTE),
  REF_TYPE         VARCHAR2(30 BYTE),
  ADDRESS          VARCHAR2(300 BYTE),
  CONTACT_NO       VARCHAR2(30 BYTE),    
  BRANCH_CODE VARCHAR2(50),
  COMPANY_CODE VARCHAR2(50),
  CREATED_BY VARCHAR2(50), 
  CREATED_ON TIMESTAMP, 
  CREATED_TIME VARCHAR2(15),
  MODIFIED_BY VARCHAR2(50), 
  MODIFIED_ON TIMESTAMP, 
  MODIFIED_TIME VARCHAR2(15), 
  CONSTRAINT EMP_REFERENCE_PK PRIMARY KEY(ID),
  CONSTRAINT EMP_REFERENCE_FK FOREIGN KEY(EMP_ID)
  REFERENCES EMP_INFO(ID)
);
/
CREATE OR REPLACE TRIGGER EMP_REFERENCE_TGR
BEFORE INSERT OR UPDATE ON EMP_REFERENCE
FOR EACH ROW 
BEGIN
IF INSERTING THEN
    :NEW.COMPANY_CODE := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_CODE');
    :NEW.BRANCH_CODE  := APEX_UTIL.GET_SESSION_STATE('GLOBAL_COMPANY_BRANCH_CODE');
    :NEW.CREATED_BY := V('APP_USER');
    :NEW.CREATED_ON := SYSDATE; 
    :NEW.CREATED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
IF UPDATING THEN
    :NEW.MODIFIED_BY := V('APP_USER');
    :NEW.MODIFIED_ON := SYSDATE; 
    :NEW.MODIFIED_TIME := TO_CHAR(SYSDATE, 'HH12:MI:SS AM');
END IF;
EXCEPTION
WHEN OTHERS THEN
NULL;
END;
/